import {Router} from '@grammyjs/router'
import * as config from '../../config'
import * as keyboards from '../assets/keyboards'
import * as strings from '../assets/strings'
import partnerMenu from '../menus/partner-menu'
import {dbManager, setUserStep} from '../db-manager'
import {projectLinksValidator, randomString} from '../logic'
import {configureScope} from "@sentry/node";
import {MANAGER_ID} from "../../config";

export const router = new Router((ctx: any) => {
    return ctx.userData?.step
})

router.route('get-project-links', async (ctx: any) => {
    console.log('92347234787234878923789')
    const userID = ctx.from.id
    const text = ctx.msg.text
    const db = await dbManager
    if (projectLinksValidator(text)){
        ctx.api.sendMessage(MANAGER_ID, '<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É\n</b>' +
            `<i>–î–∞–Ω–Ω—ã–µ -</i> \n ${text}`, {parse_mode: "HTML"})
        ctx.reply('üü¢<b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è!</b>', {
            parse_mode: "HTML"
        })
        db.checkOffers.insertOne({
            userID,
            status: 'waiting',
        })
    } else {
        setUserStep(userID)
        ctx.reply('‚ùå–ù–µ–≤–µ—Ä–Ω—ã–µ —Å—Å—ã–ª–∫–∏')
    }
})
router.route('exit-way', async (ctx: any, next: any) => {

})
